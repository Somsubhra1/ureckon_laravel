:root {
    --Hsl: 140;
    --hsL: 40;
  }
  
  $transition: cubic-bezier(0.455, 0.03, 0.515, 0.955);
  $dur: 3.6s;
  
  @import url('https://fonts.googleapis.com/css?family=Major+Mono+Display');
  
  .body {
    position: relative;
    margin:  auto;
    padding: 0px 0 30px 0;
    min-height: calc(100vh - 120px);
    
    
    &:after,
    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100%;
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center;
      transition: all .3s $transition;
      z-index: -6;
    }
    
    &:after {
      background: radial-gradient(circle, hsl((var(--Hsl)), 89%, 86%) 0%, hsl(0, 0%, 98%) 100%);
      opacity: 1;
      z-index: -1;
    }
    
    &:before {
      background: radial-gradient(circle, hsl((var(--Hsl)), 29%, 6%) 0%, hsl(0, 0%, 18%) 100%);
      opacity: 0;
    }
  }
  
  .tesseract {
    width: 60vw;
    padding-top: 3rem;
    max-height: calc(100vh - 120px);
    filter: drop-shadow( 3px 3px 4px rgba(0, 0, 0, .4));
    stroke: #2D4671;
    transition: stroke .3s $transition;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    
    .up {
      fill: hsl((var(--Hsl)), 72%, 78%);
    }
    
    .left {
      fill: hsl((var(--Hsl)), 39%, 34%);
    }
    
    .right {
      fill: hsl((var(--Hsl)), 39%, 54%);
    }
    
    polygon {
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-miterlimit: 10;  
    }
  
    .cube,
    polygon[class*="cube"] {
      animation: pulse $dur $transition infinite;
      animation-play-state: running;
    }
    
    $steps: 1 2 3 4 5 6 7 8;
    @each $step in $steps {
      .cube-#{$step} {
        animation-delay: ( $dur / 8 ) * ( $step / 2 ) !important;
      }
    }
    
    @keyframes pulse {
      0%, 40% {
        transform: scale(1);
        opacity: 1;
      }
      
      20% {
        transform: scale(0);
        opacity: 0;
      }
    }
  }
  
  .controls {
    position: absolute;
    top:  0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    
    h5 {
      font-family: 'Major Mono Display', monospace;
      font-size: 10px;
      color: hsl((var(--Hsl)), 72%, 20%);
      margin: 0;
      margin-top: 6px;
      transition: color .3s $transition;
    }
    
    &>div {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      width: 33%;
      padding-top: 5px;
      text-align: center;
      
      &:first-of-type {
        h5 span:first-of-type {
          display: inline-block;
        }
  
        h5 span:last-of-type {
          display: none;
        }
      }
    }
    
    .svg-wrap {
      display: flex;
      align-items: flex-end;
      height: 36px;
    }
    
    .dragIndicator {
      width: 60px;
      stroke: hsl((var(--Hsl)), 72%, 20%);
      opacity: 0.9;
      transition: all .4s $transition;
  
      #arrows {
        opacity: 0.6;
      }
  
      .mouse {
        animation: BandF 2s $transition infinite;
      }
  
      @keyframes BandF {
        0%, 100% {
          transform: translateX(-3px);
        }
  
        50% {
          transform: translateX(3px);
        }
      }
    }
  
    .toggle-lightMode {
  
      svg {
        width: 36px;
        -webkit-tap-highlight-color: rgba(0,0,0,0);
        -webkit-tap-highlight-color: transparent;
        
        &:hover {
          cursor: pointer;
        }
      }
      
      h5 span:first-of-type {
        display: inline-block;
      }
  
      h5 span:last-of-type {
        display: none;
      }
  
      #toggle-mode {
        filter: drop-shadow( 0px 0px 5px hsl((var(--Hsl)), 72%, 100%));
      }
  
      .day {
        fill: hsl((var(--Hsl)), 100%, 80%);
        opacity: 1;
      }
  
      .night {
        transform: translateY(-100%);
        fill: #2e3e46;
        opacity: 0;
        transition: all .3s $transition;
      }
    }
  
    .play-pause {
      width:  30px;
      height: 30px;
      opacity: 0.6;
      -webkit-tap-highlight-color: rgba(0,0,0,0);
      -webkit-tap-highlight-color: transparent;
  
      path {
        fill: hsl((var(--Hsl)), 72%, 40%);
      }
  
      #play,
      #pause {
        transition: .3s $transition;
        transition-property: transform, opacity;
        transform-origin: 15px 15px;
      }
  
      #play {
        transform: scale(0);
        opacity: 0;
      }
  
      #pause {
        transform: scale(1);
        opacity: 1;
      }
  
      &:hover {
        cursor: pointer;
      }
    }
    
    @media (max-width: 400px) {
      h5 {
        font-size: 8px;
      }
    }
  }
  
  body.darkMode {
    
    &:after {
      opacity: 0;
    }
    
    &:before {
      opacity: 1;
    }
    
    .toggle-lightMode {
      .night {
        transform: translateY(0%);
        opacity: 1;
      }
  
      h5 span {
        &:first-of-type {
          display: none;
        }
  
        &:last-of-type {
          display: inline-block;
        }
      }
  
    }
    
    .tesseract {
      filter: drop-shadow( 2px 2px 2px rgba(255, 255, 255, .4));
      stroke: #c5c5c5;
      
      .up {
        fill: hsl((var(--Hsl)), 62%, 90%);
      }
  
      .left {
        fill: hsl((var(--Hsl)), 29%, 46%);
      }
  
      .right {
        fill: hsl((var(--Hsl)), 29%, 66%);
      }
    }
    
    .dragIndicator {
      stroke: hsl((var(--Hsl)), 72%, 96%);
    }
    
    .play-pause {
      filter: drop-shadow( 2px 2px 2px rgba(255, 255, 255, .3));
      
      path {
        fill: hsl((var(--Hsl)), 72%, 90%);
      }
    }
    
    h5 {
      color: hsl((var(--Hsl)), 72%, 96%);
    }
  }
  
  body.togglePaused {
    
    .tesseract {
      .cube,
      polygon[class*="cube"] {
        animation-play-state: paused;
      }
    }
    
    .controls>div:first-of-type {
      h5 span {
        &:first-of-type {
          display: none;
        }
  
        &:last-of-type {
          display: inline-block;
        }
      }
    }
    
    .play-pause {
      #play {
        transform: scale(1);
        opacity: 1;
      }
      
      #pause {
        transform: scale(0);
        opacity: 0;
      }
    }
  }